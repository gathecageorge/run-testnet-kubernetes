---
# Service account for promtail
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail

---
# Role for promtail
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

---
# Role binding for promtail
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
- kind: ServiceAccount
  name: promtail
  namespace: default

---
# Promtail config
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
data:
  promtail.yml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0
      log_level: debug

    positions:
      filename: /tmp/positions.yml

    clients:
      - url: http://loki-service.default.svc:3100/loki/api/v1/push

    scrape_configs:
    - pipeline_stages:
      - docker:
      job_name: kubernetes-pods-name
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_name
        target_label: __service__
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ^$
        source_labels:
        - __service__
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: k8s_app

      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: k8s_namespace_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: k8s_pod_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: k8s_container_name

      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__

      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__

    - pipeline_stages:
      - docker:
      job_name: kubernetes-pods-static
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: ^$
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_label_component
        target_label: __service__

      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__

      - action: drop
        regex: ^$
        source_labels:
        - __service__

      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __service__
        target_label: k8s_app

      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: k8s_namespace_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: k8s_pod_name

      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: k8s_container_name

      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
        - __meta_kubernetes_pod_container_name
        target_label: __path__

---
# Promtail port 9080
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
      - name: promtail
        image: grafana/promtail
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        args:
          - '--config.file=/etc/promtail/promtail.yml'
        volumeMounts:
        - name: config-volume
          mountPath: /etc/promtail/promtail.yml
          subPath: promtail.yml
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        securityContext:
          privileged: true
          runAsUser: 0
        ports:
        - containerPort: 9080
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
      volumes:
      - name: config-volume
        configMap:
          name: promtail-config
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      serviceAccountName: promtail

---
# Promtail service port 9080
kind: Service
apiVersion: v1
metadata:
  name: promtail-service
spec:
  selector:
    app: promtail
  ports:
  - name: promtail
    protocol: TCP
    port: 9080
    targetPort: 9080
  type: ClusterIP

---
# Loki config
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
data:
  loki.yml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096

    ingester:
      wal:
        enabled: true
        dir: /tmp/wal
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 1h       # Any chunk not receiving new logs in this time will be flushed
      max_chunk_age: 1h           # All chunks will be flushed when they hit this age, default is 1h
      chunk_target_size: 1048576  # Loki will attempt to build chunks up to 1.5MB, flushing first if chunk_idle_period or max_chunk_age is reached first
      chunk_retain_period: 30s    # Must be greater than index read cache TTL if using an index cache (Default index read cache TTL is 5m)
      max_transfer_retries: 0     # Chunk transfers disabled

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /tmp/loki/boltdb-shipper-active
        cache_location: /tmp/loki/boltdb-shipper-cache
        cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
        shared_store: filesystem
      filesystem:
        directory: /tmp/loki/chunks

    compactor:
      working_directory: /tmp/loki/boltdb-shipper-compactor
      shared_store: filesystem

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_burst_size_mb: 16
      ingestion_rate_mb: 16
    chunk_store_config:
      max_look_back_period: 0s

    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

    ruler:
      storage:
        type: local
        local:
          directory: /tmp/loki/rules
      rule_path: /tmp/loki/rules-temp
      alertmanager_url: http://localhost:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true

---
# Loki port 3100
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki
        args:
          - '--config.file=/etc/loki/loki.yml'
        volumeMounts:
        - name: config-volume
          mountPath: /etc/loki/loki.yml
          subPath: loki.yml
        ports:
        - containerPort: 3100
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
      volumes:
      - name: config-volume
        configMap:
          name: loki-config

---
# Loki service port 3100
kind: Service
apiVersion: v1
metadata:
  name: loki-service
spec:
  selector:
    app: loki
  ports:
  - name: loki
    protocol: TCP
    port: 3100
    targetPort: 3100
  type: ClusterIP
